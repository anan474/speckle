{"version":3,"sources":["node_modules/browser-pack/_prelude.js","Speckle.js","docs/assets/src/js/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Speckle","element","options","_classCallCheck","this","Element","throwElementError","defaultOptions","quantity","minSize","maxSize","tbOffset","lrOffset","minOpacity","maxOpacity","isBokeh","color","zIndex","isCropped","tagName","attributes","parseOptions","globalStyles","borderRadius","display","pointerEvents","position","upgradedClass","render","_typeof","parsedOptions","key","min","max","Math","floor","random","toString","slice","toUpperCase","_options","_element$getBoundingC","getBoundingClientRect","width","height","size","getRandomInt","center","minTop","maxTop","minLeft","maxLeft","renderColor","getRandomHex","Object","assign","backgroundColor","boxShadow","left","opacity","top","_options2","window","getComputedStyle","classList","add","indexOf","style","overflow","speckle","document","createElement","setAttribute","styles","getStyles","styleKey","attributeKey","appendChild","_Speckle","addEventListener","_Speckle2","default","querySelector","multi"],"mappings":"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","file":"main.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","'use-strict';\r\n\r\n/**\r\n * Speckle\r\n *\r\n * A Javascript plugin that adds stylized speckles \r\n * to any element, with no dependencies.\r\n *\r\n * @package speckle\r\n * @since   0.0.1\r\n */\r\nclass Speckle {\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @since  0.0.1\r\n\t * @param  {Element}  element  The passed element to speckle.\r\n\t * @param  {obj}      options  The options object.\r\n\t * @return {void} \r\n\t */\r\n\tconstructor(element, options) {\r\n\t\t// throw error if `element` is not a valid HTML element.\r\n\t\tif (! element || ! (element instanceof Element)) {\r\n\t\t\tthis.throwElementError();\r\n\t\t}\r\n\t\t// Set the default options.\r\n\t\tthis.defaultOptions = {\r\n\t\t\tquantity: 56, // quantity of speckles\r\n\t\t\tminSize: 4, // smallest speckle (1+, less than `maxSize`, px)\r\n\t\t\tmaxSize: 56, // largest speckle (1+, greater than `minSize`, px)\r\n\t\t\ttbOffset: 56, // top/bottom offset (0+, px)\r\n\t\t\tlrOffset: 56,  // left/right offset (0+, px)\r\n\t\t\tminOpacity: 12.5, // minimum opacity (1-100)\r\n\t\t\tmaxOpacity: 87.5, // maximum opacity (1-100)\r\n\t\t\tisBokeh: false, // bokeh effect (blur as a factor of distance)\r\n\t\t\tcolor: '', // color (hex, rgb, hsl, keyword). If none, the colors will be randomized.\r\n\t\t\tzIndex: 0, // z-index (bokeh: the starting z-index)\r\n\t\t\tisCropped: false, // apply `overflow: hidden;` to the container\r\n\t\t\ttagName: 'I', // the Tag Name that the speckle should be rendered as\r\n\t\t\tattributes: null // attributes object as `key: value` pairs\r\n\t\t};\r\n\t\t// Parse and set options.\r\n\t\tthis.options = this.parseOptions(options, this.defaultOptions);\r\n\t\t// Set the global styles.\r\n\t\tthis.globalStyles = {\r\n\t\t\tborderRadius: '50%', \r\n\t\t\tdisplay: 'block', \r\n\t\t\tpointerEvents: 'none', \r\n\t\t\tposition: 'absolute', \r\n\t\t};\r\n\t\t// Set the upgraded class.\r\n\t\tthis.upgradedClass = 'speckle--upgraded';\r\n\t\t// Render speckles.\r\n\t\tthis.render(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Parse the passed options against the defaults.\r\n\t * \r\n\t * @param  {obj}  options         The passed in user options object.\r\n\t * @param  {obj}  defaultOptions  The default options object.\r\n\t * @return {obj}                  The parsed options object.\r\n\t */\r\n\tparseOptions(options, defaultOptions) {\r\n\t\t// if no options are passed, just return the default options.\r\n\t\tif (! options || typeof options !== 'object') {\r\n\t\t\treturn defaultOptions;\r\n\t\t}\r\n\t\t// init empty `parsedOptions` object.\r\n\t\tvar parsedOptions = {};\r\n\t\t// loop default option keys and parse. If the options \r\n\t\t// object has this key, use it; else, use the default option.\r\n\t\tfor (var key in defaultOptions) {\r\n\t\t\tparsedOptions[key] = options[key] || defaultOptions[key];\r\n\t\t}\r\n\t\t// return the parsed options.\r\n\t\treturn parsedOptions;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Throw an element error.\r\n\t * \r\n\t * @since  0.0.1\r\n\t * @return {Error}  The formatted element error.\r\n\t */\r\n\tthrowElementError() {\r\n\t\tthrow new Error(\r\n\t\t\t'Speckle.js\\n' + \r\n\t\t\t'A valid HTML Element must be passed to the constructor as the first argument.'\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Get a random integer between a passed minimum and maximum.\r\n\t * \r\n\t * @since  0.0.1\r\n\t * @param  {int}  min  The minimum for the returned integer.\r\n\t * @param  {int}  max  The maximum for the returned integer.\r\n\t * @return {int}       The randomized integer.\r\n\t */\r\n\tgetRandomInt(min, max) {\r\n\t\treturn Math.floor(Math.random() * ((max - min) + 1) + min);\r\n\t}\r\n\r\n\t/**\r\n\t * Get a random hex color.\r\n\t * \r\n\t * @since  0.0.1\r\n\t * @return {string}  A random hex color.\r\n\t */\r\n\tgetRandomHex() {\r\n\t\treturn '#' + ('000000' + Math.random().toString(16).slice(2, 8)).slice(-6).toUpperCase();\r\n\t}\r\n\r\n\tgetStyles(element) {\r\n\t\tconst { minSize, maxSize, tbOffset, lrOffset, minOpacity, maxOpacity, color, isBokeh, zIndex } = this.options;\r\n\t\tconst { width, height } = element.getBoundingClientRect();\r\n\t\t// size\r\n\t\tconst size = this.getRandomInt(minSize, maxSize);\r\n\t\tconst center = (size / 2);\r\n\t\t// top\r\n\t\tconst minTop = ((0 - tbOffset) - center);\r\n\t\tconst maxTop = ((height + tbOffset) - center);\r\n\t\t// left\r\n\t\tconst minLeft = ((0 - lrOffset) - center);\r\n\t\tconst maxLeft = ((width + lrOffset) - center);\r\n\t\t// color\r\n\t\tvar renderColor = color || this.getRandomHex();\r\n\t\t// Add styles to the speckle.\r\n\t\treturn Object.assign(this.globalStyles, {\r\n\t\t\tbackgroundColor: renderColor, \r\n\t\t\tboxShadow: isBokeh ? ('0 0 ' + (size / 3) + 'px ' + (size / 3) + 'px ' + renderColor) : '', \r\n\t\t\theight: size + 'px', \r\n\t\t\tleft: this.getRandomInt(minLeft, maxLeft) + 'px', \r\n\t\t\topacity: (this.getRandomInt(minOpacity, maxOpacity) * 0.01), \r\n\t\t\ttop: this.getRandomInt(minTop, maxTop) + 'px', \r\n\t\t\twidth: size + 'px', \r\n\t\t\tzIndex: zIndex, \r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Render the speckles.\r\n\t * \r\n\t * @since  0.0.1\r\n\t * @param  {Element}  element  The container element to speckle.\r\n\t * @return {void} \r\n\t */\r\n\trender(element) {\r\n\t\tconst { quantity, isCropped, tagName, attributes } = this.options;\r\n\t\tconst { position } = window.getComputedStyle(element);\r\n\t\t// add the upgraded class.\r\n\t\telement.classList.add(this.upgradedClass);\r\n\t\t// add relative positioning to the element if it \r\n\t\t// is not already `relative`, `fixed`, or `absolute`.\r\n\t\tif (['relative, absolute, fixed'].indexOf(position) === -1) {\r\n\t\t\telement.style.position = 'relative';\r\n\t\t}\r\n\t\t// Add `overflow: hidden;` to element if `isCropped` is `true`.\r\n\t\tif (isCropped) {\r\n\t\t\telement.style.overflow = 'hidden';\r\n\t\t}\r\n\t\t// render speckles according to quantity.\r\n\t\tfor (var i = 1; i <= quantity; i++) {\r\n\t\t\t// Create speckle element according to the `tagName` option.\r\n\t\t\tconst speckle = document.createElement(tagName);\r\n\t\t\t// Set the index of this attribute as `data-speckle-index` \r\n\t\t\t// incase it needs to be accessed by other scripts.\r\n\t\t\tspeckle.setAttribute('data-speckle-index', i);\r\n\t\t\t// Get speckle styles.\r\n\t\t\tconst styles = this.getStyles(element);\r\n\t\t\t// loop over the speckle style object keys and apply the styles.\r\n\t\t\tif (styles && typeof styles === 'object') {\r\n\t\t\t\tfor (var styleKey in styles) {\r\n\t\t\t\t\tspeckle.style[styleKey] = styles[styleKey];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Add the custom attributes to the speckle.\r\n\t\t\tif (attributes && typeof attributes === 'object') {\r\n\t\t\t\tfor (var attributeKey in attributes) {\r\n\t\t\t\t\tspeckle.setAttribute(attributeKey, attributes[attributeKey]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Append the speckle to the container element.\r\n\t\t\telement.appendChild(speckle);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default Speckle;","'use-strict';\r\n\r\nimport Speckle from '../../../../Speckle.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', function(e) {\r\n\t// Default\r\n\tnew Speckle(document.querySelector('#default'));\r\n\t// Large\r\n\tnew Speckle(document.querySelector('#large'), {\r\n\t\tquantity: 25, \r\n\t\tminSize: 128, \r\n\t\tmaxSize: 256, \r\n\t\ttbOffset: 128, \r\n\t\tlrOffset: 256, \r\n\t});\r\n\t// Small\r\n\tnew Speckle(document.querySelector('#small'), {\r\n\t\tquantity: 100, \r\n\t\tminSize: 4, \r\n\t\tmaxSize: 24, \r\n\t\ttbOffset: 64, \r\n\t\tlrOffset: 128,  \r\n\t});\r\n\t// Mono\r\n\tnew Speckle(document.querySelector('#mono'), {\r\n\t\tcolor: '#000000', \r\n\t});\r\n\t// A Lot\r\n\tnew Speckle(document.querySelector('#alot'), {\r\n\t\tquantity: 360, \r\n\t\ttbOffset: 16, \r\n\t\tlrOffset: 16, \r\n\t});\r\n\t// A Lot\r\n\tnew Speckle(document.querySelector('#alittle'), {\r\n\t\tquantity: 16, \r\n\t\ttbOffset: 56, \r\n\t\tlrOffset: 56, \r\n\t});\r\n\t// Deco\r\n\tnew Speckle(document.querySelector('#deco'), {\r\n\t\tquantity: 6, \r\n\t\tminSize: 256, \r\n\t\tmaxSize: 768,\r\n\t\ttbOffset: 16, \r\n\t\tlrOffset: 16, \r\n\t});\r\n\t// Crop\r\n\tnew Speckle(document.querySelector('#crop'), {\r\n\t\tquantity: 6, \r\n\t\tminSize: 256, \r\n\t\tmaxSize: 768,\r\n\t\ttbOffset: 16, \r\n\t\tlrOffset: 16, \r\n\t\tisCropped: true, \r\n\t});\r\n\t// Bokeh\r\n\tnew Speckle(document.querySelector('#bokeh'), {\r\n\t\tisBokeh: true,  \r\n\t\tcolor: '#67b0ff',  \r\n\t\tquantity: 16,  \r\n\t\tminSize: 8,  \r\n\t\tmaxSize: 128,  \r\n\t\ttbOffset: 96,  \r\n\t\tlrOffset: 256,  \r\n\t\tminOpacity: 25,  \r\n\t\tmaxOpacity: 50,   \r\n\t});\r\n\t// Multi\r\n\tconst multi = document.querySelector('#multi');\r\n\tnew Speckle(multi, {\r\n\t\ttbOffset: 96, \r\n\t\tlrOffset: 128, \r\n\t\tzIndex: 1, \r\n\t});\r\n\tnew Speckle(multi, {\r\n\t\tquantity: 4, \r\n\t\tminSize: 8, \r\n\t\tmaxSize: 256, \r\n\t\tzIndex: 2, \r\n\t});\r\n\tnew Speckle(multi, {\r\n\t\tisBokeh: true,  \r\n\t\tquantity: 24,  \r\n\t\tminSize: 8,  \r\n\t\tmaxSize: 128,  \r\n\t\ttbOffset: 128,  \r\n\t\tlrOffset: 256,  \r\n\t\tminOpacity: 25,  \r\n\t\tmaxOpacity: 50, \r\n\t\tzIndex: 3,  \r\n\t});\r\n});\r\n"]}