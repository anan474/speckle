{"version":3,"sources":["node_modules/browser-pack/_prelude.js","docs/assets/src/js/main.js","src/js/speckle.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_speckle","document","addEventListener","masthead","mastheadSmall","mastheadLarge","titles","copyright","querySelector","_speckle2","default","quantity","minSize","maxSize","maxOpacity","isCropped","lrOffset","tbOffset","zIndex","preventDefault","rerender","color","isBokeh","minOpacity","multi","space","initExampleSpeckles","querySelectorAll","forEach","title","innerHTML","replace","Date","getFullYear","Speckle","element","options","_classCallCheck","this","instance","Element","throwElementError","defaultOptions","tagName","attributes","parseOptions","_options","throwOptionsError","globalStyles","borderRadius","display","pointerEvents","position","upgradedClass","render","_typeof","parsedOptions","key","value","message","min","max","Math","floor","random","toString","slice","toUpperCase","size","getRandomInt","center","renderColor","getRandomHex","Object","assign","backgroundColor","boxShadow","height","left","opacity","top","width","speckles","speckle","removeChild","groups","getAttribute","cleanElement","newGroups","split","splice","indexOf","setAttribute","join","removeAttribute","positionMod","style","classList","remove","overflowMod","overflow","destroy","_window$getComputedSt","window","getComputedStyle","isUpgraded","contains","oldGroups","createElement","styles","getStyles","styleKey","attributeKey","appendChild","add"],"mappings":"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","file":"main.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","// import ES6 Module from /src;\r\nimport Speckle from '../../../../src/js/speckle';\r\n// import UMD Module from /dist;\r\n// const Speckle = require('../../../../dist/js/speckle');\r\n\r\n/**\r\n * Initialize masthead speckles.\r\n *\r\n * @since  0.0.1\r\n * @return {void} \r\n */\r\nfunction initMastheadSpeckles() {\r\n\tconst masthead = document.querySelector('.speckle-masthead');\r\n\tconst mastheadSmall = new Speckle(masthead, {\r\n\t\tquantity: 36, \r\n\t\tminSize: 4, \r\n\t\tmaxSize: 64,\r\n\t\tmaxOpacity: 64, \r\n\t\tisCropped: true, \r\n\t\tlrOffset: 4, \r\n\t\ttbOffset: 4, \r\n\t\tzIndex: 5,\r\n\t});\r\n\tconst mastheadLarge = new Speckle(masthead, {\r\n\t\tquantity: 12, \r\n\t\tminSize: 256, \r\n\t\tmaxSize: 768,\r\n\t\tmaxOpacity: 74, \r\n\t\tisCropped: true, \r\n\t\tlrOffset: 2, \r\n\t\ttbOffset: 2, \r\n\t\tzIndex: 0,\r\n\t});\r\n\tconst mastheadTitle = masthead.querySelector('.speckle-masthead__title a');\r\n\tmastheadTitle.addEventListener('click', (e) => {\r\n\t\te.preventDefault();\r\n\t\tmastheadSmall.rerender();\r\n\t\tmastheadLarge.rerender();\r\n\t});\r\n}\r\n\r\n/**\r\n * Initialize masthead speckles.\r\n *\r\n * @since  0.0.1\r\n * @return {void} \r\n */\r\nfunction initSectionTitleSpeckles() {\r\n\tconst titles = document.querySelectorAll('.speckle-section__title');\r\n\tif (titles && (titles.length > 0)) {\r\n\t\ttitles.forEach((title, i) => {\r\n\t\t\tnew Speckle(title, {\r\n\t\t\t\tquantity: 16, \r\n\t\t\t\tminSize: 4, \r\n\t\t\t\tmaxSize: 18,\r\n\t\t\t\tmaxOpacity: 64, \r\n\t\t\t\tlrOffset: 16, \r\n\t\t\t\ttbOffset: 16, \r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Initialize example speckles.\r\n *\r\n * @since  0.0.1\r\n * @return {void} \r\n */\r\nfunction initExampleSpeckles() {\r\n\t// Default\r\n\tnew Speckle(document.querySelector('#default'));\r\n\t// Large\r\n\tnew Speckle(document.querySelector('#large'), {\r\n\t\tquantity: 25, \r\n\t\tminSize: 128, \r\n\t\tmaxSize: 256, \r\n\t\ttbOffset: 20, \r\n\t\tlrOffset: 20, \r\n\t});\r\n\t// Small\r\n\tnew Speckle(document.querySelector('#small'), {\r\n\t\tquantity: 96, \r\n\t\tminSize: 4, \r\n\t\tmaxSize: 16, \r\n\t});\r\n\t// Mono\r\n\tnew Speckle(document.querySelector('#mono'), {\r\n\t\tcolor: '#000000', \r\n\t});\r\n\t// A Lot\r\n\tnew Speckle(document.querySelector('#alot'), {\r\n\t\tquantity: 360, \r\n\t\ttbOffset: 0, \r\n\t\tlrOffset: 0, \r\n\t});\r\n\t// A Lot\r\n\tnew Speckle(document.querySelector('#alittle'), {\r\n\t\tquantity: 12, \r\n\t});\r\n\t// Deco\r\n\tnew Speckle(document.querySelector('#deco'), {\r\n\t\tquantity: 6, \r\n\t\tminSize: 256, \r\n\t\tmaxSize: 768,\r\n\t\ttbOffset: 0, \r\n\t\tlrOffset: 0, \r\n\t});\r\n\t// Crop\r\n\tnew Speckle(document.querySelector('#crop'), {\r\n\t\tquantity: 6, \r\n\t\tminSize: 256, \r\n\t\tmaxSize: 768,\r\n\t\ttbOffset: 2, \r\n\t\tlrOffset: 2, \r\n\t\tisCropped: true, \r\n\t});\r\n\t// Bokeh\r\n\tnew Speckle(document.querySelector('#bokeh'), {\r\n\t\tisBokeh: true, \r\n\t\tcolor: '#67b0ff', \r\n\t\tquantity: 24, \r\n\t\tminSize: 8, \r\n\t\tmaxSize: 112, \r\n\t\tlrOffset: 20, \r\n\t\ttbOffset: 20, \r\n\t\tminOpacity: 25, \r\n\t\tmaxOpacity: 50, \r\n\t});\r\n\t// Multi\r\n\tconst multi = document.querySelector('#multi');\r\n\tnew Speckle(multi, {\r\n\t\tzIndex: 2, \r\n\t\ttbOffset: 36, \r\n\t\tlrOffset: 36, \r\n\t});\r\n\tnew Speckle(multi, {\r\n\t\tquantity: 4, \r\n\t\tminSize: 8, \r\n\t\tmaxSize: 256, \r\n\t\ttbOffset: 24, \r\n\t\tlrOffset: 24, \r\n\t\tzIndex: 4, \r\n\t});\r\n\tnew Speckle(multi, {\r\n\t\tisBokeh: true, \r\n\t\tquantity: 24, \r\n\t\tminSize: 8, \r\n\t\tmaxSize: 128, \r\n\t\ttbOffset: 24, \r\n\t\tlrOffset: 24, \r\n\t\tminOpacity: 25, \r\n\t\tmaxOpacity: 50, \r\n\t\tzIndex: 6, \r\n\t});\r\n\t// Space\r\n\tconst space = document.querySelector('#space');\r\n\tnew Speckle(space, {\r\n\t\tquantity: 36, \r\n\t\ttbOffset: 0, \r\n\t\tlrOffset: 0, \r\n\t\tminSize: 2,\r\n\t\tmaxSize: 6,\r\n\t\tminOpacity: 64, \r\n\t\tmaxOpacity: 87.5, \r\n\t\tisCropped: true, \r\n\t\tzIndex: 2, \r\n\t});\r\n\tnew Speckle(space, {\r\n\t\tquantity: 128, \r\n\t\tcolor: '#ffffff', \r\n\t\ttbOffset: 0, \r\n\t\tlrOffset: 0, \r\n\t\tminSize: 2,\r\n\t\tmaxSize: 6,\r\n\t\tminOpacity: 87.5, \r\n\t\tmaxOpacity: 100, \r\n\t\tisCropped: true, \r\n\t\tzIndex: 0, \r\n\t});\r\n\t// Cheese\r\n\tnew Speckle(document.querySelector('#cheese'), {\r\n\t\tcolor: '#ffffff', \r\n\t\tquantity: 32,\r\n\t\tminSize: 16,\r\n\t\tmaxSize: 64,\r\n\t\tminOpacity: 100, \r\n\t\tmaxOpacity: 100, \r\n\t\ttbOffset: 4, \r\n\t\tlrOffset: 4, \r\n\t});\r\n}\r\n\r\nfunction initCopyrightDate() {\r\n\tconst copyright = document.querySelector('#copyright');\r\n\tcopyright.innerHTML = copyright.innerHTML.replace(/(%CURRENT_YEAR%)/g, new Date().getFullYear());\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', (e) => {\r\n\tinitMastheadSpeckles();\r\n\tinitExampleSpeckles();\r\n\tinitSectionTitleSpeckles();\r\n\tinitCopyrightDate();\r\n});\r\n","/**\r\n * Speckle.js\r\n *\r\n * A JavaScript module that adds responsive, stylized \r\n * speckles to any element; with no dependencies.\r\n *\r\n * @package speckle\r\n * @since   0.0.1\r\n */\r\nclass Speckle {\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @since  0.0.1\r\n\t * @param  {Element}  element  The passed element to speckle.\r\n\t * @param  {obj}      options  The options object.\r\n\t * @return {void} \r\n\t */\r\n\tconstructor(element, options) {\r\n\t\t// keep track of this instance number for use in \r\n\t\t// grouping the speckles, and the `destroy()` method.\r\n\t\tthis.instance = Speckle.instance;\r\n\t\t// augment the instance count on the class, not the instance.\r\n\t\tSpeckle.instance++;\r\n\t\t// throw error if `element` is not a valid HTML element.\r\n\t\tif (! element || ! (element instanceof Element)) {\r\n\t\t\tthis.throwElementError();\r\n\t\t}\r\n\t\tthis.element = element;\r\n\t\t// Set the default options.\r\n\t\tthis.defaultOptions = {\r\n\t\t\tquantity: 56, // quantity of speckles\r\n\t\t\tminSize: 4, // smallest speckle (1+, less than `maxSize`, px)\r\n\t\t\tmaxSize: 56, // largest speckle (1+, greater than `minSize`, px)\r\n\t\t\ttbOffset: 8, // top/bottom offset (0+, %)\r\n\t\t\tlrOffset: 8,  // left/right offset (0+, %)\r\n\t\t\tminOpacity: 12.5, // minimum opacity (1-100)\r\n\t\t\tmaxOpacity: 87.5, // maximum opacity (1-100)\r\n\t\t\tisBokeh: false, // bokeh effect (blur as a factor of distance)\r\n\t\t\tcolor: '', // color (hex, rgb, hsl, keyword). If none, the colors will be randomized.\r\n\t\t\tzIndex: 0, // z-index (bokeh: the starting z-index)\r\n\t\t\tisCropped: false, // apply `overflow: hidden;` to the container\r\n\t\t\ttagName: 'I', // the Tag Name that the speckle should be rendered as\r\n\t\t\tattributes: null // attributes object as `key: value` pairs\r\n\t\t};\r\n\t\t// Parse and set options.\r\n\t\tthis.options = this.parseOptions(options, this.defaultOptions);\r\n\t\tconst { minSize, maxSize, tbOffset, lrOffset, minOpacity, maxOpacity } = this.options;\r\n\t\t// throw error if `minSize` is less than 1, or greater than `maxSize`.\r\n\t\tif ((minSize < 1) || (minSize > maxSize)) {\r\n\t\t\tthis.throwOptionsError('minSize');\r\n\t\t}\r\n\t\t// throw error if `maxSize` is less than 1, or less than `minSize`.\r\n\t\tif ((maxSize < 1) || (maxSize < minSize)) {\r\n\t\t\tthis.throwOptionsError('maxSize');\r\n\t\t}\r\n\t\t// throw error if `tbOffset` is less than 0.\r\n\t\tif (tbOffset < 0) {\r\n\t\t\tthis.throwOptionsError('tbOffset');\r\n\t\t}\r\n\t\t// throw error if `lrOffset` is less than 0.\r\n\t\tif (lrOffset < 0) {\r\n\t\t\tthis.throwOptionsError('lrOffset');\r\n\t\t}\r\n\t\t// throw error if `minOpacity` is less than 0 or greater than 100; or if is greater than `maxOpacity`.\r\n\t\tif ((minOpacity < 0) || (minOpacity > 100) || (minOpacity > maxOpacity)) {\r\n\t\t\tthis.throwOptionsError('minOpacity');\r\n\t\t}\r\n\t\t// throw error if `maxOpacity` is less than 0 or greater than 100; or if is less than `minOpacity`.\r\n\t\tif ((maxOpacity < 0) || (maxOpacity > 100) || (maxOpacity < minOpacity)) {\r\n\t\t\tthis.throwOptionsError('maxOpacity');\r\n\t\t}\r\n\t\t// Set the global styles.\r\n\t\tthis.globalStyles = {\r\n\t\t\tborderRadius: '50%', \r\n\t\t\tdisplay: 'block', \r\n\t\t\tpointerEvents: 'none', \r\n\t\t\tposition: 'absolute', \r\n\t\t};\r\n\t\t// Set the upgraded class.\r\n\t\tthis.upgradedClass = 'speckle--upgraded';\r\n\t\t// Render speckles.\r\n\t\tthis.render();\r\n\t}\r\n\r\n\t/**\r\n\t * Parse the passed options against the defaults.\r\n\t * \r\n\t * @param  {obj}  options         The passed in user options object.\r\n\t * @param  {obj}  defaultOptions  The default options object.\r\n\t * @return {obj}                  The parsed options object.\r\n\t */\r\n\tparseOptions(options, defaultOptions) {\r\n\t\t// if no options are passed, just return the default options.\r\n\t\tif (! options || typeof options !== 'object') {\r\n\t\t\treturn defaultOptions;\r\n\t\t}\r\n\t\t// init empty `parsedOptions` object.\r\n\t\tvar parsedOptions = {};\r\n\t\t// loop default option keys and parse. If the options \r\n\t\t// object has this key, use it; else, use the default option.\r\n\t\tfor (var key in defaultOptions) {\r\n\t\t\tconst value = options[key];\r\n\t\t\t// If the value is a number, set it no matter what.\r\n\t\t\t// This prevents issues where passing `0` is read as \r\n\t\t\t// no option passed, rendering the default instead.\r\n\t\t\tif (typeof value === 'number') {\r\n\t\t\t\tparsedOptions[key] = value;\r\n\t\t\t} else {\r\n\t\t\t\tparsedOptions[key] = value || defaultOptions[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\t// return the parsed options.\r\n\t\treturn parsedOptions;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Throw an element error.\r\n\t * \r\n\t * @since  0.0.1\r\n\t * @return {Error}  The formatted element error.\r\n\t */\r\n\tthrowElementError() {\r\n\t\tthrow new Error(\r\n\t\t\t'Speckle.js\\n' + \r\n\t\t\t'A valid HTML Element must be passed to the constructor as the first argument.'\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Throw an element error.\r\n\t * \r\n\t * @since  0.0.1\r\n\t * @return {Error}  The formatted element error.\r\n\t */\r\n\tthrowOptionsError(key) {\r\n\t\tvar message = '';\r\n\t\tif (key === 'minSize') {\r\n\t\t\tmessage = 'The value must be greater than or equal to 1, and less than `maxSize`.';\r\n\t\t} else if (key === 'maxSize') {\r\n\t\t\tmessage = 'The value must be greater than or equal to 1, and greater than `minSize`.';\r\n\t\t} else if (key === 'tbOffset') {\r\n\t\t\tmessage = 'The value must be greater than 0.';\r\n\t\t} else if (key === 'lrOffset') {\r\n\t\t\tmessage = 'The value must be greater than 0.';\r\n\t\t} else if (key === 'minOpacity') {\r\n\t\t\tmessage = 'The value must be between 1 and 100, and less than `maxOpacity`.';\r\n\t\t} else if (key === 'maxOpacity') {\r\n\t\t\tmessage = 'The value must be between 1 and 100, and greater than `minOpacity`.';\r\n\t\t}\r\n\t\tthrow new Error(\r\n\t\t\t`Speckle.js [${key}]\\n` + message\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Get a random integer between a passed minimum and maximum.\r\n\t * \r\n\t * @since  0.0.1\r\n\t * @param  {int}  min  The minimum for the returned integer.\r\n\t * @param  {int}  max  The maximum for the returned integer.\r\n\t * @return {int}       The randomized integer.\r\n\t */\r\n\tgetRandomInt(min, max) {\r\n\t\treturn Math.floor(Math.random() * ((max - min) + 1) + min);\r\n\t}\r\n\r\n\t/**\r\n\t * Get a random hex color.\r\n\t * \r\n\t * @since  0.0.1\r\n\t * @return {string}  A random hex color.\r\n\t */\r\n\tgetRandomHex() {\r\n\t\treturn `#${('000000' + Math.random().toString(16).slice(2, 8)).slice(-6).toUpperCase()}`;\r\n\t}\r\n\r\n\tgetStyles() {\r\n\t\tconst { globalStyles, options } = this;\r\n\t\tconst { minSize, maxSize, tbOffset, lrOffset, minOpacity, maxOpacity, color, isBokeh, zIndex } = options;\r\n\t\t// size\r\n\t\tconst size = this.getRandomInt(minSize, maxSize);\r\n\t\tconst center = (size / 2);\r\n\t\t// color\r\n\t\tconst renderColor = color || this.getRandomHex();\r\n\t\t// Create the styles object.\r\n\t\treturn Object.assign(globalStyles, {\r\n\t\t\tbackgroundColor: renderColor, \r\n\t\t\tboxShadow: isBokeh ? `0 0 ${(size / 3)}px ${(size / 3)}px ${renderColor}` : '', \r\n\t\t\theight: `${size}px`, \r\n\t\t\tleft: `calc(${this.getRandomInt(0 - lrOffset, 100 + lrOffset)}% - ${center}px)`, \r\n\t\t\topacity: (this.getRandomInt(minOpacity, maxOpacity) * 0.01), \r\n\t\t\ttop: `calc(${this.getRandomInt(0 - tbOffset, 100 + tbOffset)}% - ${center}px)`, \r\n\t\t\twidth: `${size}px`, \r\n\t\t\tzIndex: zIndex, \r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy Speckle.\r\n\t * \r\n\t * @return {void} \r\n\t */\r\n\tdestroy() {\r\n\t\tconst { element, instance, upgradedClass } = this;\r\n\t\t// destroy the speckles related to this instance.\r\n\t\tconst speckles = element.querySelectorAll(`[data-speckle-group=\"${instance}\"]`);\r\n\t\tif (speckles && (speckles.length > 0)) {\r\n\t\t\tspeckles.forEach((speckle, i) => {\r\n\t\t\t\telement.removeChild(speckle);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// remove this instance from the `data-speckle-groups` \r\n\t\t// attribute on the container element. If none are left after\r\n\t\t// removal, remove the attribute alltogether.\r\n\t\tconst groups = element.getAttribute('data-speckle-groups') || '';\r\n\t\t// initialize the `cleanElement` var as false.\r\n\t\tlet cleanElement = false;\r\n\t\tif (groups) {\r\n\t\t\t// split the groups value by `,` and explode into an array.\r\n\t\t\tlet newGroups = groups.split(',');\r\n\t\t\t// Using `splice()`, remove the index of this instance from\r\n\t\t\t// the `newGroups` array. Note: this returns the removed node, \r\n\t\t\t// not the new array.\r\n\t\t\tnewGroups.splice(newGroups.indexOf(instance.toString()), 1);\r\n\t\t\t// if there are any groups left after the removal, \r\n\t\t\t// set the `data-speckle-groups` attribute to the \r\n\t\t\t// new items as CSV. If there are no items left, remove \r\n\t\t\t// the attribute and set `cleanElement` to `true`.\r\n\t\t\tif (newGroups.length > 0) {\r\n\t\t\t\telement.setAttribute('data-speckle-groups', newGroups.join(','));\r\n\t\t\t} else {\r\n\t\t\t\telement.removeAttribute('data-speckle-groups');\r\n\t\t\t\tcleanElement = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// fully clean the container element, but only if no speckle \r\n\t\t// groups are left on the container element by this point.\r\n\t\tif (cleanElement) {\r\n\t\t\t// if the CSS `position` of the container element was modified\r\n\t\t\t// by this class, it will have added a `data-speckle-position-mod` \r\n\t\t\t// attribute set to `true` or the element's explicit CSS `position` \r\n\t\t\t// value if there was one on the element itself prior to the \r\n\t\t\t// first initialization.\r\n\t\t\tconst positionMod = element.getAttribute('data-speckle-position-mod');\r\n\t\t\tif (positionMod) {\r\n\t\t\t\telement.style.position = (positionMod === 'true') ? null : positionMod;\r\n\t\t\t\telement.removeAttribute('data-speckle-position-mod');\r\n\t\t\t}\r\n\t\t\t// remove the upgraded class.\r\n\t\t\telement.classList.remove(upgradedClass);\r\n\t\t\t// Remove the overflow mod. if the CSS `overflow` of the container \r\n\t\t\t// element was modified by this class, it will have added a \r\n\t\t\t// `data-speckle-overflow-mod` attribute set to `true` or the \r\n\t\t\t// element's explicit CSS `overflow` value if there was one \r\n\t\t\t// on the element itself prior to the first initialization.\r\n\t\t\tconst overflowMod = element.getAttribute('data-speckle-overflow-mod');\r\n\t\t\tif (overflowMod) {\r\n\t\t\t\telement.style.overflow = (overflowMod === 'true') ? null : overflowMod;\r\n\t\t\t\telement.removeAttribute('data-speckle-overflow-mod');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy and rerender the speckles according\r\n\t * to the same options. Simply runs the `destroy()`\r\n\t * method followed by the `render()` method again.\r\n\t * \r\n\t * @return {void} \r\n\t */\r\n\trerender() {\r\n\t\tthis.destroy();\r\n\t\tthis.render();\r\n\t}\r\n\r\n\t/**\r\n\t * Render the speckles.\r\n\t * \r\n\t * @since  0.0.1\r\n\t * @param  {Element}  element  The container element to speckle.\r\n\t * @return {void} \r\n\t */\r\n\trender() {\r\n\t\tconst { element, instance, options, upgradedClass } = this;\r\n\t\tconst { quantity, isCropped, tagName, attributes } = options;\r\n\t\tconst { position, overflow } = window.getComputedStyle(element);\r\n\t\tconst isUpgraded = element.classList.contains(upgradedClass);\r\n\t\t// Set the instance of this class as `data-speckle-group` \r\n\t\t// incase it needs to be accessed by other scripts. Get the value \r\n\t\t// and append rather than overwriting as this value can be a CSV \r\n\t\t// list of speckle groups.\r\n\t\tconst oldGroups = element.getAttribute('data-speckle-groups') || '';\r\n\t\tconst newGroups = oldGroups ? [oldGroups, instance].join(',') : instance;\r\n\t\telement.setAttribute('data-speckle-groups', newGroups);\r\n\t\t// only add relative positioning to the container element if \r\n\t\t// it is not already `relative`, `fixed`, or `absolute`.\r\n\t\tif (! isUpgraded && (['relative, absolute, fixed'].indexOf(position) === -1)) {\r\n\t\t\t// on the container element, save the fact that the CSS `position` has \r\n\t\t\t// been modified as a `data-speckle-position-mod` attribute set to `true` \r\n\t\t\t// or the explicit `position` value if there is one.\r\n\t\t\telement.setAttribute('data-speckle-position-mod', element.style.position || true);\r\n\t\t\t// set the CSS `position`value to `relative` so that the speckles \r\n\t\t\t// (which are positioned absolute) know where to live.\r\n\t\t\telement.style.position = 'relative';\r\n\t\t}\r\n\t\t// Add `overflow: hidden;` to element if `isCropped` is `true`, if\r\n\t\t// overflows are not already hidden on the container element.\r\n\t\tif (! isUpgraded && isCropped && (['hidden'].indexOf(overflow) === -1)) {\r\n\t\t\telement.setAttribute('data-speckle-overflow-mod', element.style.overflow || true);\r\n\t\t\telement.style.overflow = 'hidden';\r\n\t\t}\r\n\t\t// render speckles according to quantity.\r\n\t\tfor (var i = 1; i <= quantity; i++) {\r\n\t\t\t// Create speckle element according to the `tagName` option.\r\n\t\t\tconst speckle = document.createElement(tagName);\r\n\t\t\t// Set the index of this speckle as `data-speckle-index` \r\n\t\t\t// incase it needs to be accessed by other scripts.\r\n\t\t\tspeckle.setAttribute('data-speckle-index', i);\r\n\t\t\t// Set the speckle group as `data-speckle-group` attribute\r\n\t\t\t// incase it needs to be accessed by other scripts, and\r\n\t\t\t// for use in the `destroy()` method.\r\n\t\t\tspeckle.setAttribute('data-speckle-group', instance);\r\n\t\t\t// Get speckle styles.\r\n\t\t\tconst styles = this.getStyles();\r\n\t\t\t// loop over the speckle style object keys and apply the styles.\r\n\t\t\tif (styles && typeof styles === 'object') {\r\n\t\t\t\tfor (var styleKey in styles) {\r\n\t\t\t\t\tspeckle.style[styleKey] = styles[styleKey];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Add the custom attributes to the speckle.\r\n\t\t\tif (attributes && typeof attributes === 'object') {\r\n\t\t\t\tfor (var attributeKey in attributes) {\r\n\t\t\t\t\tspeckle.setAttribute(attributeKey, attributes[attributeKey]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Append the speckle to the container element.\r\n\t\t\telement.appendChild(speckle);\r\n\t\t}\r\n\t\t// add the upgraded class.\r\n\t\tif (! isUpgraded) {\r\n\t\t\telement.classList.add(upgradedClass);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nSpeckle.instance = 1;\r\n\r\nexport default Speckle;"]}